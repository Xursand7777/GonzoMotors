import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import '../../../data/models/car_details.dart' as db;
import 'diff_section.dart';

List<Widget> buildSectionsFromDetails(
    BuildContext context, // üëà –¥–æ–±–∞–≤–∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ª–æ–∫–∞–ª–∏
    db.CarDetails? A,
    db.CarDetails? B, {
      required bool hideEquals,
    }) {
  if (A == null || B == null) {
    return const [
      DiffSection(
        title: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        rows: [
          DiffRow('0‚Äì100 –∫–º/—á', '‚Äî', '‚Äî', higherIsBetter: false),
          DiffRow('–ú–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å', '‚Äî', '‚Äî'),
          DiffRow('–ú–æ—â–Ω–æ—Å—Ç—å', '‚Äî', '‚Äî'),
        ],
      ),
    ];
  }

  // ===== –õ–æ–∫–∞–ª–µ-–∑–∞–≤–∏—Å–∏–º–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª =====
  final locale = Localizations.localeOf(context).toLanguageTag();
  String n(num v, {int d = 0}) {
    final f = NumberFormat.decimalPattern(locale)
      ..minimumFractionDigits = d
      ..maximumFractionDigits = d;
    return f.format(v);
  }

  // –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å '–µ—Å—Ç—å/–Ω–µ—Ç' ‚Äî —ç—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç, –Ω–µ UI. –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –ª–æ–∫–∞–ª–∏–∑—É–π.
  String yes(bool x) => x ? '–µ—Å—Ç—å' : '–Ω–µ—Ç';

  final perf = DiffSection(
    title: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
    hideEquals: hideEquals,
    rows: [
      DiffRow('0‚Äì100 –∫–º/—á', '${n(A.perf.zeroTo100, d: 1)} —Å', '${n(B.perf.zeroTo100, d: 1)} —Å', higherIsBetter: false),
      DiffRow('–ú–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å', '${n(A.perf.topSpeedKmh)} –∫–º/—á', '${n(B.perf.topSpeedKmh)} –∫–º/—á'),
      DiffRow('–ú–æ—â–Ω–æ—Å—Ç—å', '${n(A.perf.hp)} hp', '${n(B.perf.hp)} hp'),
      DiffRow('–ö—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç', '${n(A.perf.torqueNm)} –ù¬∑–º', '${n(B.perf.torqueNm)} –ù¬∑–º'),
      DiffRow('–ü—Ä–∏–≤–æ–¥', A.perf.drive, B.perf.drive, compareAsText: true),
      DiffRow('–ö–ü–ü', A.perf.gearbox, B.perf.gearbox, compareAsText: true),
    ],
  );

  final battery = (A.battery != null || B.battery != null)
      ? DiffSection(
    title: '–ë–∞—Ç–∞—Ä–µ—è –∏ –∑–∞–ø–∞—Å —Ö–æ–¥–∞',
    hideEquals: hideEquals,
    rows: [
      DiffRow(
        '–Å–º–∫–æ—Å—Ç—å (–±—Ä—É—Ç—Ç–æ)',
        A.battery != null ? '${n(A.battery!.capacityKwh)} –∫–í—Ç¬∑—á' : '‚Äî',
        B.battery != null ? '${n(B.battery!.capacityKwh)} –∫–í—Ç¬∑—á' : '‚Äî',
      ),
      if (A.battery?.usableKwh != null || B.battery?.usableKwh != null)
        DiffRow(
          '–Å–º–∫–æ—Å—Ç—å (–Ω–µ—Ç—Ç–æ)',
          A.battery?.usableKwh != null ? '${n(A.battery!.usableKwh!, d: 1)} –∫–í—Ç¬∑—á' : '‚Äî',
          B.battery?.usableKwh != null ? '${n(B.battery!.usableKwh!, d: 1)} –∫–í—Ç¬∑—á' : '‚Äî',
        ),
      if (A.battery?.rangeWltpKm != null || B.battery?.rangeWltpKm != null)
        DiffRow(
          'WLTP –∑–∞–ø–∞—Å',
          A.battery?.rangeWltpKm != null ? '${n(A.battery!.rangeWltpKm!)} –∫–º' : '‚Äî',
          B.battery?.rangeWltpKm != null ? '${n(B.battery!.rangeWltpKm!)} –∫–º' : '‚Äî',
        ),
      if (A.battery?.rangeCltcKm != null || B.battery?.rangeCltcKm != null)
        DiffRow(
          'CLTC –∑–∞–ø–∞—Å',
          A.battery?.rangeCltcKm != null ? '${n(A.battery!.rangeCltcKm!)} –∫–º' : '‚Äî',
          B.battery?.rangeCltcKm != null ? '${n(B.battery!.rangeCltcKm!)} –∫–º' : '‚Äî',
        ),
    ],
  )
      : const SizedBox.shrink();

  final charging = (A.charging != null || B.charging != null)
      ? DiffSection(
    title: '–ó–∞—Ä—è–¥–∫–∞',
    hideEquals: hideEquals,
    rows: [
      DiffRow(
        'AC –±–æ—Ä—Ç–æ–≤–æ–µ –ó–£',
        A.charging != null ? '${n(A.charging!.acKw, d: 1)} –∫–í—Ç' : '‚Äî',
        B.charging != null ? '${n(B.charging!.acKw, d: 1)} –∫–í—Ç' : '‚Äî',
      ),
      DiffRow(
        'DC –ø–∏–∫',
        A.charging != null ? '${n(A.charging!.dcKwPeak, d: 0)} –∫–í—Ç' : '‚Äî',
        B.charging != null ? '${n(B.charging!.dcKwPeak, d: 0)} –∫–í—Ç' : '‚Äî',
      ),
      DiffRow(
        '10‚Äì80%',
        A.charging != null ? '${n(A.charging!.dc10to80Min)} –º–∏–Ω' : '‚Äî',
        B.charging != null ? '${n(B.charging!.dc10to80Min)} –º–∏–Ω' : '‚Äî',
        higherIsBetter: false,
      ),
    ],
  )
      : const SizedBox.shrink();

  final dims = DiffSection(
    title: '–†–∞–∑–º–µ—Ä—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å',
    hideEquals: hideEquals,
    rows: [
      DiffRow(
        '–î√ó–®√ó–í',
        '${n(A.dim.lengthMm)}√ó${n(A.dim.widthMm)}√ó${n(A.dim.heightMm)} –º–º',
        '${n(B.dim.lengthMm)}√ó${n(B.dim.widthMm)}√ó${n(B.dim.heightMm)} –º–º',
        compareAsText: true,
      ),
      DiffRow('–ö–æ–ª—ë—Å–Ω–∞—è –±–∞–∑–∞', '${n(A.dim.wheelbaseMm)} –º–º', '${n(B.dim.wheelbaseMm)} –º–º'),
      if (A.dim.trunkL != 0 || B.dim.trunkL != 0)
        DiffRow('–ë–∞–≥–∞–∂–Ω–∏–∫', '${n(A.dim.trunkL)} –ª', '${n(B.dim.trunkL)} –ª'),
    ],
  );

  final interior = DiffSection(
    title: '–ò–Ω—Ç–µ—Ä—å–µ—Ä –∏ –∫–æ–º—Ñ–æ—Ä—Ç',
    hideEquals: hideEquals,
    rows: [
      DiffRow('–ú–µ—Å—Ç', n(A.interior.seats), n(B.interior.seats)),
      DiffRow('–î–∏–Ω–∞–º–∏–∫–æ–≤', n(A.interior.speakers), n(B.interior.speakers)),
      DiffRow('–ú–∞—Å—Å–∞–∂', yes(A.interior.massage), yes(B.interior.massage), compareAsText: true),
      DiffRow('–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è', yes(A.interior.ventilation), yes(B.interior.ventilation), compareAsText: true),
      DiffRow('–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫', yes(A.interior.fridge), yes(B.interior.fridge), compareAsText: true),
    ],
  );

  final adas = DiffSection(
    title: 'ADAS –∏ —Å–µ–Ω—Å–æ—Ä—ã',
    hideEquals: hideEquals,
    rows: [
      DiffRow('–£—Ä–æ–≤–µ–Ω—å', A.adas.level, B.adas.level, compareAsText: true),
      DiffRow('–õ–∏–¥–∞—Ä', yes(A.adas.lidar), yes(B.adas.lidar), compareAsText: true),
      DiffRow('–ö–∞–º–µ—Ä', n(A.adas.cameras), n(B.adas.cameras)),
      DiffRow('–†–∞–¥–∞—Ä–æ–≤', n(A.adas.radars), n(B.adas.radars)),
      DiffRow('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞', A.adas.stack, B.adas.stack, compareAsText: true),
    ],
  );

  final warranty = DiffSection(
    title: '–ì–∞—Ä–∞–Ω—Ç–∏–∏',
    hideEquals: hideEquals,
    rows: [
      DiffRow('–ë–∞–∑–æ–≤–∞—è', '${n(A.warranty.baseYears)} –ª–µ—Ç', '${n(B.warranty.baseYears)} –ª–µ—Ç'),
      DiffRow('–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è', '${n(A.warranty.extYears)} –ª–µ—Ç', '${n(B.warranty.extYears)} –ª–µ—Ç'),
    ],
  );

  final pricing = DiffSection(
    title: '–¶–µ–Ω–∞ (CN)',
    hideEquals: hideEquals,
    rows: [
      DiffRow('MSRP –º–∏–Ω', '${n(A.pricing.msrpCnyMin)} ¬•', '${n(B.pricing.msrpCnyMin)} ¬•', higherIsBetter: false),
      if (A.pricing.msrpCnyMax != null || B.pricing.msrpCnyMax != null)
        DiffRow(
          'MSRP –º–∞–∫—Å',
          A.pricing.msrpCnyMax != null ? '${n(A.pricing.msrpCnyMax!)} ¬•' : '‚Äî',
          B.pricing.msrpCnyMax != null ? '${n(B.pricing.msrpCnyMax!)} ¬•' : '‚Äî',
          higherIsBetter: false,
        ),
    ],
  );

  return [
    perf,
    if (battery is! SizedBox) battery,
    if (charging is! SizedBox) charging,
    dims,
    interior,
    adas,
    warranty,
    pricing,
  ];
}
